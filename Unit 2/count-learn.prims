// This is a model that has to learn counting based on operators borrowed from other tasks
// More in particular, it can borrow all it needs from semantic-global
// Adapted from the ACT-R tutorial by Niels Taatgen

define task count-learn {
    initial-goals: (count-learn)
    default-activation: 1.0
    ol: t
    rt: -2.0
    lf: 0.2
    default-operator-self-assoc: 0.0
    goal-operator-learning: t
    reward: 10.0
    beta: 0.1
    references: (fact-type action final-action final-response final-response-negative)
}

define facts {
    (cf1 count-fact  one  two)
    (cf2 count-fact  two  three)
    (cf3 count-fact  three  four)
    (cf4 count-fact  four  five)
    (cf5 count-fact  five  six)
    (cf6 count-fact six seven)
    (cf7 count-fact seven eight)
    (cf8 count-fact eight nine)
    (cg9 count-fact nine ten)
}

define action say {
  latency: 0.3
  noise: 0.1
  distribution: uniform
  output: Saying
}

define script {
	set-goal("count-learn",["fact-type","count-fact"],["action","say"],["final-action","say"],["final-response","stop"])
    digits = ["one","two","three","four","five","six","seven",
        "eight","nine","ten"]
    start = random(3)
    end = start + 1 + random(3)
    print("Counting from",digits[start],"to",digits[end])
    screen(digits[start],digits[end])
    run-until-action("say","stop")
    issue-reward()
    trial-end()
}
