// Count the total number of spoons on two placemats
//

define task count-spoons {
    initial-goals: (count-spoons)
    rt: -2.0
    lf: 0.3
    ans: 0.1
    default-activation: 1.0
    references: (container item-type action target)
}

define facts {
    (zero number-fact 0)
    (one number-fact 1)
    (two number-fact 2)
    (three number-fact 3)
    (four number-fact 4)
    (five number-fact 5)
    (six number-fact 6)
    (cf0 count-fact zero one)
    (cf1 count-fact  one  two)
    (cf2 count-fact  two  three)
    (cf3  count-fact  three  four)
    (cf4  count-fact  four  five)
    (cf5  count-fact  five  six)
    (adf1 addition-fact one zero one)
    (adf2 addition-fact two one three)
}

define visual {
    (screen1 screen nil placemat1)
    (placemat1 placemat placemat2 item1)
    (placemat2 placemat nil item5)
    (item1 utensil item2 nil fork)
    (item2 utensil item3 nil fork)
    (item3 utensil item4 nil knife)
    (item4 utensil nil nil spoon)
    (item5 utensil item6 nil fork)
    (item6 utensil item7 nil knife)
    (item7 utensil item8 nil spoon)
    (item8 utensil nil nil spoon)
}

define goal count-spoons {
    operator init-count-spoons {
        WM1=nil
        V1=screen
        ==>
        >>V3  // shift to the first container (placemat)
        >>V3 /// shift to first item in the container
		zero -> WM1
    }
	
	operator skip-item-to-next {
		V1 = item-type
		V4 <> target
		V2 <> nil
		==>
		>>V2
	}
	
	operator skip-item-up {
		V1 = item-type
		V4 <> target
		V2 = nil
		==>
		V<<
	}
	
	operator count-item {
		V1 = item-type
		V4 = target
		RT1 = nil
		==>
		count-fact -> RT1
		WM1 -> RT2
	}
	
	operator update-count-next {
		RT1 = count-fact
		V2 <> nil
		==>
		RT3 -> WM1
		>>V2
	}
	
	operator update-count-up {
		RT1 = count-fact
		V2 = nil
		==>
		RT3 -> WM1
		V<<
	}
	
	operator next-container {
		V1 = container
		V2 <> nil
	==>
		>>V2 // next container
		>>V3 // first item in that container
	}
	
	operator last-container {
		V1 = container
		V2 = nil
	==>
		action -> AC1
		WM1 -> AC2
		nil -> G1
	}

}


define script {
    screen("screen1")
    set-goal("count-spoons",["action","say"],["container","placemat"],["item-type","utensil"],["target","spoon"])
    run-until-action("say")
    issue-reward()
    trial-end()
}
